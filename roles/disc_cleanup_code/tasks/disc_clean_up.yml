---

# - name: "Create folder on the remote endpoint - {{ download_path }}"
#   win_file:
#     path: "{{ download_path }}"
#     state: directory
#     mode: "{{permissions}}"
#   become_method: runas
#   username: "{{ lookup('env','sdc_username') | default(omit) }}"
#   password: "{{ lookup('env','sdc_password') | default(omit) }}"

- name: Retrieve Current User's Identity
  command: whoami
  register: current_user
  changed_when: false

- name: print the current user
  ansible.builtin.debug:
    msg: logged user {{ current_user }}

# - name: Set Up Credentials
#   set_fact:
#     username: "{{ ansible_user }}"
#     password: "{{ password }}"
#   when: current_user.stdout != "{{ ansible_user }}"

# - name: Remove Existing Mapped Drive
#   win_mapped_drive:
#     drive: "{{ drive_letter }}"
#     state: absent
#   ignore_errors: yes

# - name: Create a New Mapped Network Drive
#   win_mapped_drive:
#     drive: "{{ drive_letter }}"
#     network_location: "{{ source_path }}"
#     user: "{{ username }}"
#     password: "{{ password }}"
#   when: current_user.stdout != "{{ ansible_user }}"

# - name: Create a Log Directory
#   win_file:
#     path: "{{ log_directory }}"
#     state: directory

# - name: Create a Log File
#   win_file:
#     path: "{{ log_file }}"
#     state: touch

# - name: Find and Delete Old Files
#   win_find:
#     paths: "{{ source_path }}"
#     recurse: yes
#     patterns: "*.*"
#   register: old_files

# - name: Iterate and Delete Old Files
#   win_file:
#     path: "{{ item.path }}"
#     state: absent
#   loop: "{{ old_files.files }}"
#   when: (ansible_date_time.date - item.ctime.date).days > {{ days }}

# - name: Remove the Mapped Network Drive Again
#   win_mapped_drive:
#     drive: "{{ drive_letter }}"
#     state: absent
#   ignore_errors: yes
